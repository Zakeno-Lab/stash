<ui:FluentWindow
    x:Class="synapse.Views.ClipboardHistoryWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:converters="clr-namespace:synapse.Converters"
    xmlns:utils="clr-namespace:synapse.Utils"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    Title="Stash - Clipboard History" Height="500" Width="800"
    WindowStartupLocation="CenterScreen"
    Icon="pack://application:,,,/logo_stash2.ico">
    
    <i:Interaction.Behaviors>
        <utils:WindowBehavior 
            HideOnDeactivated="True" 
            HideOnEscape="True"
            HideCommand="{Binding HideWindowCommand}"
            InitializeCommand="{Binding InitializeWindowCommand}" />
    </i:Interaction.Behaviors>

    <ui:FluentWindow.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ContentTypeVisibilityConverter x:Key="ContentTypeVis" />
        
        <!-- Modern ListBoxItem Style with Accent Color Selection -->
        <Style x:Key="ModernListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0,0,0,1" />
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Margin="6,0"
                                HorizontalAlignment="Stretch">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <!-- Mouse Over State -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                            </Trigger>
                            
                            <!-- Selected State -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
                            </Trigger>
                            
                            <!-- Selected + Mouse Over State -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
                            </MultiTrigger>
                            
                            <!-- Disabled State -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ui:FluentWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!-- Drag handle background -->
            <Border Background="Transparent">
                <i:Interaction.Behaviors>
                    <utils:WindowDragBehavior />
                </i:Interaction.Behaviors>
            </Border>
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" /> <!-- Search Box -->
                    <ColumnDefinition Width="Auto" /> <!-- Type Filter -->
                </Grid.ColumnDefinitions>

                <!-- 1. Search TextBox with progress indicator -->
                <Grid Grid.Column="0">
                <ui:TextBox
                    x:Name="SearchTextBox"
                    PlaceholderText="Type to filter entries..."
                    Icon="{ui:SymbolIcon Search24}"
                    ClearButtonEnabled="True"
                    Margin="5"
                    Text="{Binding SearchTerm, UpdateSourceTrigger=PropertyChanged}">
                    <ui:TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding FocusListFromSearchCommand}" />
                        <KeyBinding Key="Tab" Command="{Binding FocusListFromSearchCommand}" />
                        <KeyBinding Key="Down" Command="{Binding FocusListFromSearchCommand}" />
                    </ui:TextBox.InputBindings>
                </ui:TextBox>
                
                <!-- Subtle progress indicator -->
                <ProgressBar 
                    IsIndeterminate="True"
                    Visibility="{Binding IsSearchEnhancing, Converter={StaticResource BoolToVis}}"
                    Height="2"
                    VerticalAlignment="Bottom"
                    Margin="5,0,5,5"
                    Background="Transparent"
                    Foreground="{DynamicResource AccentFillColorDefaultBrush}" />
            </Grid>

            <!-- 2. Type ComboBox -->
            <ComboBox
                Grid.Column="1"
                ItemsSource="{Binding ContentTypeFilterOptions}"
                SelectedItem="{Binding SelectedContentTypeFilter, Mode=TwoWay}"
                Margin="5" />
            </Grid>
        </Grid>


        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Master List - Grouped with CollectionViewSource -->
            <ListBox x:Name="HistoryListBox"
                     Grid.Column="0"
                     ItemsSource="{Binding GroupedClipboardItems}"
                     SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.CanContentScroll="False"
                     ScrollViewer.PanningMode="VerticalOnly"
                     utils:SmoothScrollBehavior.IsEnabled="True"
                     utils:SmoothScrollBehavior.ScrollSpeed="0.5"
                     utils:ScrollActivityBehavior.IsEnabled="True"
                     utils:ScrollActivityBehavior.HideDelay="0:0:2"
                     ItemContainerStyle="{StaticResource ModernListBoxItemStyle}"
                     Background="Transparent"
                     BorderThickness="0">
                <i:Interaction.Behaviors>
                    <utils:ListBoxFocusBehavior />
                    <utils:FocusOnPropertyChangeBehavior ShouldFocus="{Binding ShouldFocusList}" />
                </i:Interaction.Behaviors>
                <ListBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding SelectedItem}" />
                </ListBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding CopyToClipboardCommand}" 
                                               CommandParameter="{Binding SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <!-- Group Style for Headers -->
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"
                                           FontWeight="Normal"
                                           FontSize="14"
                                           Margin="18,10,18,6"
                                           Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </ListBox.GroupStyle>
                
                <!-- Item Template -->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <!-- Application icon or fallback symbol icon -->
                            <Grid Grid.Column="0" Margin="0,0,12,0" Width="24" Height="24">
                                <!-- Application icon (visible when available) -->
                                <Image x:Name="AppIcon"
                                       utils:IconHelper.ExecutablePath="{Binding ApplicationExecutablePath}"
                                       RenderOptions.BitmapScalingMode="HighQuality" />
                                
                                <!-- Fallback icon (visible when no app icon) -->
                                <ui:SymbolIcon x:Name="FallbackIcon" 
                                               Symbol="Document24" 
                                               FontSize="20"
                                               Visibility="Collapsed" />
                            </Grid>

                            <!-- Content area with multiple TextBlocks for different content types -->
                            <Grid Grid.Column="1">
                                <!-- Text content with highlighting -->
                                <TextBlock x:Name="HighlightedText"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding ContentType, Converter={StaticResource ContentTypeVis}, ConverterParameter=Text}"
                                           utils:TextHighlightBehavior.HighlightText="{Binding DisplayContent}"
                                           utils:TextHighlightBehavior.SearchTerm="{Binding DataContext.ActualSearchTerm, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
 />
                                
                                <!-- URL content with highlighting -->
                                <TextBlock x:Name="HighlightedUrl"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding ContentType, Converter={StaticResource ContentTypeVis}, ConverterParameter=URL}"
                                           utils:TextHighlightBehavior.HighlightText="{Binding DisplayContent}"
                                           utils:TextHighlightBehavior.SearchTerm="{Binding DataContext.ActualSearchTerm, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
 />
                                
                                <!-- Image content (plain text, no highlighting needed) -->
                                <TextBlock x:Name="ImageText"
                                           Text="Image"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding ContentType, Converter={StaticResource ContentTypeVis}, ConverterParameter=Image}" />
                                
                                <!-- Code content with highlighting -->
                                <TextBlock x:Name="HighlightedCode"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap"
                                           VerticalAlignment="Center"
                                           FontFamily="Cascadia Code, Consolas, Courier New"
                                           Visibility="{Binding ContentType, Converter={StaticResource ContentTypeVis}, ConverterParameter=Code}"
                                           utils:TextHighlightBehavior.HighlightText="{Binding DisplayContent}"
                                           utils:TextHighlightBehavior.SearchTerm="{Binding DataContext.ActualSearchTerm, RelativeSource={RelativeSource AncestorType=ui:FluentWindow}}"
 />
                            </Grid>
                        </Grid>

                        <!-- The Triggers that make it dynamic -->
                        <DataTemplate.Triggers>
                            <!-- Show fallback icon when no app icon is available -->
                            <DataTrigger Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}">
                                <Setter TargetName="FallbackIcon" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            
                            <!-- Content type specific fallback icons -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}" />
                                    <Condition Binding="{Binding ContentType}" Value="Image" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="FallbackIcon" Property="Symbol" Value="Image24" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}" />
                                    <Condition Binding="{Binding ContentType}" Value="URL" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="FallbackIcon" Property="Symbol" Value="Link24" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}" />
                                    <Condition Binding="{Binding ContentType}" Value="Code" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="FallbackIcon" Property="Symbol" Value="Code24" />
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- This is the vertical separator line -->
            <Border Grid.Column="1"
                    BorderThickness="1,0,0,0"
                    BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}"
                    HorizontalAlignment="Left" />

            <!-- Main Detail View Grid -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Content Preview -->
                    <RowDefinition Height="*" /> <!-- Metadata -->
                </Grid.RowDefinitions>
                
                <!-- Drag handle background for detail view -->
                <Border Background="Transparent" Grid.RowSpan="2">
                    <i:Interaction.Behaviors>
                        <utils:WindowDragBehavior />
                    </i:Interaction.Behaviors>
                </Border>

                <!-- 1. Content Preview Area -->
                <!-- Text content display with card background -->
                <Border Grid.Row="0"
                        Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Margin="10"
                        Visibility="{Binding IsSelectedTextVisible, Converter={StaticResource BoolToVis}}">
                    <ScrollViewer x:Name="DetailScrollViewer" 
                                  VerticalScrollBarVisibility="Auto" 
                                  MaxHeight="190"
                                  utils:SmoothScrollBehavior.IsEnabled="True"
                                  utils:SmoothScrollBehavior.ScrollSpeed="0.5"
                                  utils:ScrollActivityBehavior.IsEnabled="True"
                                  utils:ScrollActivityBehavior.HideDelay="0:0:2">
                        <TextBlock Padding="15"
                                   TextWrapping="Wrap"
                                   utils:TextHighlightBehavior.HighlightText="{Binding SelectedItem.Content}"
                                   utils:TextHighlightBehavior.SearchTerm="{Binding ActualSearchTerm}"
 />
                    </ScrollViewer>
                </Border>
                
                <!-- Image content display without card background -->
                <Image x:Name="DetailImage" 
                       Grid.Row="0" 
                       Source="{Binding SelectedItem.Content}" 
                       Stretch="Uniform" 
                       Margin="10"
                       MaxHeight="190"
                       Visibility="{Binding IsSelectedImageVisible, Converter={StaticResource BoolToVis}}" />
                
                <!-- Code content display with special formatting -->
                <Border Grid.Row="0" 
                        Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Margin="10"
                        Visibility="{Binding IsSelectedCodeVisible, Converter={StaticResource BoolToVis}}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Disabled"
                                  MaxHeight="190"
                                  utils:SmoothScrollBehavior.IsEnabled="True"
                                  utils:SmoothScrollBehavior.ScrollSpeed="0.5"
                                  utils:ScrollActivityBehavior.IsEnabled="True"
                                  utils:ScrollActivityBehavior.HideDelay="0:0:2">
                        <TextBlock Padding="15"
                                   FontFamily="Cascadia Code, Consolas, Courier New"
                                   FontSize="13"
                                   TextWrapping="Wrap"
                                   utils:TextHighlightBehavior.HighlightText="{Binding SelectedItem.Content}"
                                   utils:TextHighlightBehavior.SearchTerm="{Binding ActualSearchTerm}"
 />
                    </ScrollViewer>
                </Border>
                
                <!-- URL content display with clickable link -->
                <Border Grid.Row="0"
                        Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Margin="10"
                        Visibility="{Binding IsSelectedUrlVisible, Converter={StaticResource BoolToVis}}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Auto"
                                  MaxHeight="190"
                                  utils:SmoothScrollBehavior.IsEnabled="True"
                                  utils:SmoothScrollBehavior.ScrollSpeed="0.5"
                                  utils:ScrollActivityBehavior.IsEnabled="True"
                                  utils:ScrollActivityBehavior.HideDelay="0:0:2">
                        <TextBlock Padding="15"
                                   TextWrapping="Wrap">
                            <Hyperlink Command="{Binding OpenUrlCommand}"
                                       CommandParameter="{Binding SelectedItem.Content}"
                                       Foreground="{DynamicResource AccentTextFillColorPrimaryBrush}"
                                       TextDecorations="None">
                                <Hyperlink.Style>
                                    <Style TargetType="Hyperlink">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="TextDecorations" Value="Underline"/>
                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextFillColorSecondaryBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Hyperlink.Style>
                                <Run Text="{Binding SelectedItem.Content}"/>
                            </Hyperlink>
                        </TextBlock>
                    </ScrollViewer>
                </Border>

                <!-- 2. Metadata Area -->
                <Border Grid.Row="1"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}"
                        Padding="10">
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  utils:SmoothScrollBehavior.IsEnabled="True"
                                  utils:SmoothScrollBehavior.ScrollSpeed="0.5"
                                  utils:ScrollActivityBehavior.IsEnabled="True"
                                  utils:ScrollActivityBehavior.HideDelay="0:0:2">
                        <StackPanel>
                        <TextBlock Text="Information"
                                   FontWeight="SemiBold"
                                   FontSize="14"
                                   Margin="0,0,0,12"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" /> <!-- Labels with fixed width -->
                                <ColumnDefinition Width="*" /> <!-- Values -->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Metadata Row 1: Source Application -->
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Source" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="0,0,0,8" HorizontalAlignment="Right"
                                       utils:TextHighlightBehavior.HighlightText="{Binding SelectedItem.SourceApplication}"
                                       utils:TextHighlightBehavior.SearchTerm="{Binding ActualSearchTerm}"
     />
                            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" />


                            <!-- Metadata Row 2: Window Title (if available) -->
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Title" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       Visibility="{Binding SelectedItem.WindowTitle, Converter={StaticResource BoolToVis}}" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="0,0,0,8" 
                                       HorizontalAlignment="Right" TextTrimming="CharacterEllipsis" MaxWidth="200"
                                       Visibility="{Binding SelectedItem.WindowTitle, Converter={StaticResource BoolToVis}}"
                                       utils:TextHighlightBehavior.HighlightText="{Binding SelectedItem.WindowTitle}"
                                       utils:TextHighlightBehavior.SearchTerm="{Binding ActualSearchTerm}"
     />
                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" 
                                    Visibility="{Binding SelectedItem.WindowTitle, Converter={StaticResource BoolToVis}}" />


                            <!-- Metadata Row 3: Content Type -->
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Content type" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SelectedItem.ContentType}" Margin="0,0,0,8" HorizontalAlignment="Right" />
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" />


                            <!-- Metadata Row 4: Word Count (for text content) -->
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Words" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       Visibility="{Binding SelectedItem.FormattedWordCount, Converter={StaticResource BoolToVis}}" />
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding SelectedItem.FormattedWordCount}" Margin="0,0,0,8" HorizontalAlignment="Right"
                                       Visibility="{Binding SelectedItem.FormattedWordCount, Converter={StaticResource BoolToVis}}" />
                            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" 
                                    Visibility="{Binding SelectedItem.FormattedWordCount, Converter={StaticResource BoolToVis}}" />

                            <!-- Metadata Row 5: Character Count (for text content) -->
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="Characters" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       Visibility="{Binding SelectedItem.FormattedCharacterCount, Converter={StaticResource BoolToVis}}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding SelectedItem.FormattedCharacterCount}" Margin="0,0,0,8" HorizontalAlignment="Right"
                                       Visibility="{Binding SelectedItem.FormattedCharacterCount, Converter={StaticResource BoolToVis}}" />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" 
                                    Visibility="{Binding SelectedItem.FormattedCharacterCount, Converter={StaticResource BoolToVis}}" />


                            <!-- Metadata Row 6: Image Dimensions (for image content) -->
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Dimensions" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       Visibility="{Binding SelectedItem.FormattedImageDimensions, Converter={StaticResource BoolToVis}}" />
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding SelectedItem.FormattedImageDimensions}" Margin="0,0,0,8" HorizontalAlignment="Right"
                                       Visibility="{Binding SelectedItem.FormattedImageDimensions, Converter={StaticResource BoolToVis}}" />
                            <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" 
                                    Visibility="{Binding SelectedItem.FormattedImageDimensions, Converter={StaticResource BoolToVis}}" />


                            <!-- Metadata Row 6: URL Domain (for URL content) -->
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="Domain" FontWeight="Normal" Margin="0,0,10,8" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                       Visibility="{Binding SelectedItem.FormattedUrlDomain, Converter={StaticResource BoolToVis}}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Margin="0,0,0,8" HorizontalAlignment="Right"
                                       Visibility="{Binding SelectedItem.FormattedUrlDomain, Converter={StaticResource BoolToVis}}"
                                       utils:TextHighlightBehavior.HighlightText="{Binding SelectedItem.FormattedUrlDomain}"
                                       utils:TextHighlightBehavior.SearchTerm="{Binding ActualSearchTerm}"
     />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}" Opacity="0.3" VerticalAlignment="Bottom" Margin="0,0,0,3" 
                                    Visibility="{Binding SelectedItem.FormattedUrlDomain, Converter={StaticResource BoolToVis}}" />


                            <!-- Metadata Row 7: Timestamp -->
                            <TextBlock Grid.Row="6" Grid.Column="0" Text="Timestamp" FontWeight="Normal" Margin="0,0,10,0" Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                            <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding SelectedItem.LocalTimestamp}" Margin="0,0,0,0" HorizontalAlignment="Right" />
                        </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="{DynamicResource ApplicationSecondaryBackgroundBrush}" BorderThickness="0">
            <i:Interaction.Behaviors>
                <utils:WindowDragBehavior />
            </i:Interaction.Behaviors>
            <Grid>
                <!-- Left side - Stash -->
                <TextBlock Text="Stash" 
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"
                           FontWeight="SemiBold"
                           FontSize="13"
                           Foreground="{DynamicResource TextFillColorTertiaryBrush}" />
                
                <!-- Right side - by zakeno -->
                <TextBlock Text="by zakeno" 
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="0,0,10,0"
                           FontSize="12"
                           Foreground="{DynamicResource TextFillColorTertiaryBrush}" />
            </Grid>
        </Border>
    </Grid>
</ui:FluentWindow>
